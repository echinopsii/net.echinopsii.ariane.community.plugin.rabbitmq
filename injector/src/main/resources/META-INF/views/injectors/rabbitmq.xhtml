<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ccidm="http://spectral.com/cc/idm">
<ui:composition template="/templates/injectorLayout.xhtml">
    <ui:define name="injectorContent">
        <ui:fragment rendered="#{ccidm:isAuthenticated() and ccidm:hasPermission('injMapMdwRabbitMQ:display')}">
            <div>
                <div style="width:49%; float:left;">
                    <p:fieldset id="cacheGearConfpnl" legend="Gears cache configuration" collapsed="true" toggleable="true" toggleSpeed="500">
                        <h:dataTable var="key" value="#{rabbitmqConfigurationGearsCache.keys}">
                            <h:column>
                                <h:outputText value="#{key} : " styleClass="inputTitle"/>
                            </h:column>
                            <h:column>
                                <h:outputText value="#{rabbitmqConfigurationGearsCache.getGearsCacheConf(key)}"/>
                            </h:column>
                        </h:dataTable>
                    </p:fieldset>
                    <br/>

                    <p:fieldset id="confpnl" legend="Scheduling configuration" toggleable="true" toggleSpeed="500">
                        <h:form>
                            <p:growl id="rabbitmqConfigurationMessages" showDetail="true" />
                            <h:panelGrid columns="2" cellpadding="5">
                                <h:panelGrid columns="2" cellpadding="5">
                                    <h:outputText value="RabbitMQ directory query period (second): " styleClass="inputTitle"/>
                                    <p:inplace editor="true">
                                        <p:inputText required="true" label="text" value="#{rabbitmqConfigurationScheduling.directoryQueryPeriod}"/>
                                    </p:inplace>

                                    <h:outputText value="RabbitMQ entities sniffing period (second): " styleClass="inputTitle"/>
                                    <p:inplace editor="true">
                                        <p:inputText required="true" label="text" value="#{rabbitmqConfigurationScheduling.rvComponentSniffPeriod}"/>
                                    </p:inplace>
                                </h:panelGrid>
                                <p:commandButton value="Apply changes and restart" id="confApply" icon="icon-power-off icon-large" update="@form"
                                                 actionListener="#{rabbitmqConfigurationScheduling.apply}" styleClass="ui-priority-primary icon-large"
                                                 rendered="#{ccidm:hasPermission('injMapMdwRabbitMQ:action')}"/>
                            </h:panelGrid>
                        </h:form>
                    </p:fieldset>
                    <br/>

                    <p:fieldset id="gearpnl" legend="Gears" toggleable="true" toggleSpeed="500">
                        <h:form id="rabbitmqGearsTableForm">
                            <p:growl id="rabbitmqGearsTableMessages" showDetail="true" />
                            <p:dataTable id="rabbitmqGearsTable" var="gear" value="#{rabbitmqCacheGears.gearList}" filteredValue="#{rabbitmqCacheGears.filteredGearList}"
                                         paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                                         rowsPerPageTemplate="5,10,15,20,25" rows="10" paginator="true">
                                <f:facet name="header">
                                    RabbitMQ Injector gears
                                </f:facet>

                                <p:column headerText="Name" sortBy="#{gear.gearName}" filterBy="#{gear.gearName}" filterMatchMode="contains">
                                    <h:outputText value="#{gear.gearName}" />
                                </p:column>

                                <p:column headerText="Status" sortBy="#{gears.isRunning(gear)}" filterBy="#{gears.isRunning(gear)}"
                                          filterOptions="#{rabbitmqCacheGears.statusSelectOptions}" filterMatchMode="exact">
                                    <h:outputText value="#{rabbitmqCacheGears.isRunning(gear)}" style="background-color:\##{rabbitmqCacheGears.statusColor(gear)};font-weight:bold"/>
                                </p:column>

                                <p:column headerText="Action" rendered="#{ccidm:hasPermission('injMapMdwRabbitMQ:action')}">
                                    <p:commandButton value="Stop this gear" id="stopGear" icon="icon-power-off icon-large"
                                                     rendered="#{gear.isRunning()}" update="@form"
                                                     actionListener="#{rabbitmqCacheGears.stop(gear)}" styleClass="ui-priority-primary icon-large"/>
                                    <p:commandButton value="Start this gear" id="startGear" icon="icon-power-off icon-large"
                                                     rendered="#{!gear.isRunning()}" update="@form"
                                                     actionListener="#{rabbitmqCacheGears.start(gear)}" styleClass="ui-priority-primary icon-large"/>
                                </p:column>
                            </p:dataTable>
                            <p:poll update="@form" interval="10"/>
                        </h:form>
                    </p:fieldset>
                </div>
                <div style="width:49%; float:right;">
                    <p:fieldset id="cacheComponentConfpnl" legend="Components cache configuration" collapsed="true" toggleable="true" toggleSpeed="500">
                        <h:dataTable var="key" value="#{rabbitmqConfigurationComponentsCache.keys}">
                            <h:column>
                                <h:outputText value="#{key} : " styleClass="inputTitle"/>
                            </h:column>
                            <h:column>
                                <h:outputText value="#{rabbitmqConfigurationComponentsCache.getComponentsCacheConf(key)}"/>
                            </h:column>
                        </h:dataTable>
                    </p:fieldset>
                    <br/>

                    <p:fieldset id="cachepnl" legend="Components" toggleable="true" toggleSpeed="500">
                        <h:form id="rabbitmqCacheTableForm">
                            <p:growl id="rabbitmqCacheTableMessages" showDetail="true" />
                            <p:dataTable id="rabbitmqCacheTable" var="entity" value="#{rabbitmqCacheComponents.cachedEntityList}" filteredValue="#{rabbitmqCacheComponents.filteredCachedEntityList}"
                                         paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                                         rowsPerPageTemplate="5,10,15,20,25" rows="20" paginator="true">
                                <f:facet name="header">
                                    RabbitMQ injector components
                                </f:facet>

                                <p:column headerText="Name" sortBy="#{rabbitmqCacheComponents.getEntityName(entity)}" filterBy="#{rabbitmqCacheComponents.getEntityName(entity)}" filterMatchMode="contains">
                                    <h:outputText value="#{rabbitmqCacheComponents.getEntityName(entity)}" />
                                </p:column>

                                <p:column headerText="Type" sortBy="#{rabbitmqCacheComponents.getEntityType(entity)}" filterBy="#{rabbitmqCacheComponents.getEntityType(entity)}" filterMatchMode="contains">
                                    <h:outputText value="#{rabbitmqCacheComponents.getEntityType(entity)}" />
                                </p:column>

                                <p:column headerText="Last refresh" sortBy="#{rabbitmqCacheComponents.getEntityLastRefresh(entity)}" filterBy="#{rabbitmqCacheComponents.getEntityLastRefresh(entity)}" filterMatchMode="contains">
                                    <h:outputText value="#{rabbitmqCacheComponents.getEntityLastRefresh(entity)}" />
                                </p:column>

                                <p:column headerText="Action" rendered="#{ccidm:hasPermission('injMapMdwRabbitMQ:action')}">
                                    <p:commandButton value="Refresh" id="action" icon="icon-refresh icon-large"
                                                     update="@form" actionListener="#{rabbitmqCacheComponents.refreshEntity(entity)}" styleClass="ui-priority-primary icon-large"/>
                                </p:column>
                                <c:if test="#{ccidm:hasPermission('injMapMdwRabbitMQ:action')}">
                                    <f:facet name="footer">
                                        <p:commandButton value="Refresh RabbitMQ injector components cache" icon="icon-refresh icon-large" update="@form" actionListener="#{cacheComponents.refreshCache()}"
                                                         styleClass="ui-priority-primary icon-large"/>
                                    </f:facet>
                                </c:if>
                            </p:dataTable>
                            <p:poll update="@form" interval="10"/>
                        </h:form>
                    </p:fieldset>
                </div>
            </div>
        </ui:fragment>
    </ui:define>
</ui:composition>
</html>